@model Post

@* @{
  int? uid = Context.Session.GetInt32("UserId");
  } *@

<div class="card shadow rounded mx-auto mb-3">
  <h4 class="card-title text-center bg-dark text-light py-2 rounded-top">
    @Model.Topic
  </h4>

  <div class="card-body">
    <p class="card-text">@Model.Body</p>
    <small class="text-muted">Submitted on: @Model.CreatedAt by @Model.Author.FullName()</small>
  </div>

  <img class="card-img-bottom" src="@Model.ImgUrl" alt="Post">

  @* Hide edit & delete if not the author *@
  @if (Model.UserId == Context.Session.GetInt32("UserId"))
  {
    <div class="row justify-content-center p-3">

      <form asp-controller="Posts" asp-action="Delete" asp-route-postId="@Model.PostId" method="POST">
        <button class="btn btn-outline-danger btn-sm">Delete</button>
      </form>

      <a asp-controller="Posts" asp-action="Edit" asp-route-postId="@Model.PostId"
      class="btn btn-sm btn-outline-warning ml-2">
        Edit
      </a>
    </div>
  }

  <div>
    <h3>Likes</h3>
    @foreach (UserPostLike like in Model.Likes)
    {
      @* Doing it manually will leave a trailing ", " at the end. *@
      <span>@like.User.FullName(), </span>
    }

    <h3>Likes with String.Join</h3>
    <span>
      @String.Join(", ", Model.Likes.Select(like => like.User.FullName()))
    </span>
  </div>
</div>